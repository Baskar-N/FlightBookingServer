// <auto-generated />
using System;
using BookingApiService.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookingApiService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220615162045_AddedConstraints")]
    partial class AddedConstraints
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SharedModels.Models.Airline", b =>
                {
                    b.Property<int>("AirlineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContactNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AirlineId");

                    b.ToTable("Airline");
                });

            modelBuilder.Entity("SharedModels.Models.Booking", b =>
                {
                    b.Property<int>("BookingRecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bit");

                    b.Property<bool>("IsBcs")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleRecId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TicketCancelDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TicketPnr")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BookingRecId");

                    b.HasIndex("ScheduleRecId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("SharedModels.Models.Journey", b =>
                {
                    b.Property<int>("JourneyRecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bit");

                    b.Property<int>("MealTypeRecId")
                        .HasColumnType("int");

                    b.Property<int>("PassengerRecId")
                        .HasColumnType("int");

                    b.Property<int>("SeatNunber")
                        .HasColumnType("int");

                    b.HasKey("JourneyRecId");

                    b.HasIndex("PassengerRecId")
                        .IsUnique();

                    b.ToTable("Journey");
                });

            modelBuilder.Entity("SharedModels.Models.Passenger", b =>
                {
                    b.Property<int>("PassengerRecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("BookingRecId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PassengerRecId");

                    b.HasIndex("BookingRecId");

                    b.ToTable("Passenger");
                });

            modelBuilder.Entity("SharedModels.Models.ReturnJourney", b =>
                {
                    b.Property<int>("ReturnJourneyRecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bit");

                    b.Property<int>("MealTypeRecId")
                        .HasColumnType("int");

                    b.Property<int>("PassengerRecId")
                        .HasColumnType("int");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.HasKey("ReturnJourneyRecId");

                    b.HasIndex("PassengerRecId")
                        .IsUnique();

                    b.ToTable("ReturnJourney");
                });

            modelBuilder.Entity("SharedModels.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleRecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirlineId")
                        .HasColumnType("int");

                    b.Property<int>("Bcs")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDateTime")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("FromPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstrumentUsed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bit");

                    b.Property<int>("MealTypeRecId")
                        .HasColumnType("int");

                    b.Property<int>("NonBcs")
                        .HasColumnType("int");

                    b.Property<int>("Rows")
                        .HasColumnType("int");

                    b.Property<int>("ScheduledDaysRecId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDateTime")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<double>("TicketCost")
                        .HasColumnType("float");

                    b.Property<string>("ToPlace")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScheduleRecId");

                    b.HasIndex("AirlineId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("SharedModels.Models.Booking", b =>
                {
                    b.HasOne("SharedModels.Models.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleRecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SharedModels.Models.Journey", b =>
                {
                    b.HasOne("SharedModels.Models.Passenger", "Passenger")
                        .WithOne("Journey")
                        .HasForeignKey("SharedModels.Models.Journey", "PassengerRecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SharedModels.Models.Passenger", b =>
                {
                    b.HasOne("SharedModels.Models.Booking", "Booking")
                        .WithMany("Passenger")
                        .HasForeignKey("BookingRecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SharedModels.Models.ReturnJourney", b =>
                {
                    b.HasOne("SharedModels.Models.Passenger", "Passenger")
                        .WithOne("ReturnJourney")
                        .HasForeignKey("SharedModels.Models.ReturnJourney", "PassengerRecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SharedModels.Models.Schedule", b =>
                {
                    b.HasOne("SharedModels.Models.Airline", "Airline")
                        .WithMany("Schedules")
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
